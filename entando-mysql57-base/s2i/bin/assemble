#!/bin/bash
# insert settings for mirrors/repository managers into settings.xml if supplied
function configure_mirrors() {
  if [ -n "$MAVEN_MIRROR_URL" ]; then
    xml="    <mirror>\
       <id>mirror.default</id>\
       <url>$MAVEN_MIRROR_URL</url>\
       <mirrorOf>external:*</mirrorOf>\
     </mirror>"
    sed -i "s|<!-- ### configured mirrors ### -->|$xml|" $HOME/.m2/settings.xml
  fi
}
LOCAL_SOURCE_DIR=/tmp/current-s2i-build
mkdir -p $LOCAL_SOURCE_DIR
#Start Maven in the background and exit once the logline immediately following DB creation appears
if [ -d /opt/s2i/destination/src/maven ]; then
    cp -Rf /opt/s2i/destination/src/maven/. $LOCAL_SOURCE_DIR
else
    cp -Rf /opt/s2i/destination/src/. $LOCAL_SOURCE_DIR
fi
cd $LOCAL_SOURCE_DIR
configure_mirrors
MAVEN_ARGS="clean package -B -DskipTests --batch-mode --settings $HOME/.m2/settings.xml \
            -Dprofile.portDataSourceClassName=org.postgresql.Driver \
            -Dprofile.servDataSourceClassName=org.postgresql.Driver \
            -Djboss=jboss \
            -Dproject.build.sourceEncoding=UTF-8 \
            -Denv.db.environment=${DB_ENVIRONMENT} \
            -Dprofile.config.version=production \
            -Dprofile.application.baseurl.protocol=http \
            -Dprofile.datasource.jndiname.servdb=${SERVDB_JNDI} \
            -Dprofile.datasource.jndiname.portdb=${PORTDB_JNDI} \
            -Dprofile.log.activeFileOutput=true \
            -Dprofile.log.file.prefix=/var/log/entando/engine_ \
            -Dprofile.resources.path=/entando-data/resources \
            -Dprofile.resources.path.protected=/entando-data/protected \
            -Dprofile.index.path=/entando-data/indexdir \
            -Djava.net.preferIPv4Stack=true ${MAVEN_ARGS_APPEND}"
echo "Executing mvn $MAVEN_ARGS"
mvn $MAVEN_ARGS
$(dirname ${BASH_SOURCE[0]})/init-mysql-from-war.sh --war-file="$(pwd)/$(dir target/*.war)"
if [ $? -eq 0 ]; then
    exit 0
else
    exit 1
fi
